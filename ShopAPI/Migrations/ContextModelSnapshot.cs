// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopAPI.Data;

#nullable disable

namespace ShopAPI.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopAPI.Model.DanhMuc", b =>
                {
                    b.Property<int>("maDanhMuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("maDanhMuc"));

                    b.Property<string>("tenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maDanhMuc");

                    b.ToTable("DanhMuc");
                });

            modelBuilder.Entity("ShopAPI.Model.Order", b =>
                {
                    b.Property<int>("maHangHoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("maHangHoa"));

                    b.Property<double>("gia")
                        .HasColumnType("float");

                    b.Property<string>("hinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("maSanPham")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("maTaiKhoan")
                        .HasColumnType("int");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.Property<string>("tenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maHangHoa");

                    b.HasIndex("maSanPham");

                    b.HasIndex("maTaiKhoan");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("ShopAPI.Model.SanPham", b =>
                {
                    b.Property<int>("maSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("maSanPham"));

                    b.Property<double?>("gia")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("hinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("maLoai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("moTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.Property<string>("tenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maSanPham");

                    b.HasIndex("maLoai");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("ShopAPI.Model.TaiKhoan", b =>
                {
                    b.Property<int>("maTaiKhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("maTaiKhoan"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmailActive")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("activer")
                        .HasColumnType("bit");

                    b.Property<string>("diaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("quyen")
                        .HasColumnType("bit");

                    b.Property<string>("soDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maTaiKhoan");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("ShopAPI.Model.Order", b =>
                {
                    b.HasOne("ShopAPI.Model.SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("maSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopAPI.Model.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("maTaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("ShopAPI.Model.SanPham", b =>
                {
                    b.HasOne("ShopAPI.Model.DanhMuc", "danhMuc")
                        .WithMany()
                        .HasForeignKey("maLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("danhMuc");
                });
#pragma warning restore 612, 618
        }
    }
}
